<?php
/**
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this module to newer
 * versions in the future.
 *
 * @category  Smile
 * @package   Smile\Retailer
 * @author    Romain Ruaud <romain.ruaud@smile.fr>
 * @copyright 2016 Smile
 * @license   Open Software License ("OSL") v. 3.0
 *
 * Opening Hours form element renderer.
 */
?>

<?php
/** @var \Smile\Retailer\Block\Adminhtml\Retailer\OpeningHours\Element\Renderer $block */

$element = $block->getElement();
$fieldId = ($element->getHtmlContainerId()) ? ' id="' . $element->getHtmlContainerId() . '"' : '';
$fieldClass = "field admin__field field-{$element->getId()} {$element->getCssClass()}";
$fieldClass .= ($element->getRequired()) ? ' required' : '';
$fieldAttributes = $fieldId . ' class="' . $fieldClass . '" ' . $block->getUiId('form-field', $element->getId());
?>

<div<?php /* @escapeNotVerified */ echo $fieldAttributes ?>>
    <?php echo $element->getLabelHtml() ?><span class="opening-hours-day"></span>
    <?php $inputId = "opening_hours_" . uniqid() ; ?>
    <div id ="<?php echo $inputId ?>" class="opening-hours-container">
        <div class="opening-hours-indicator"></div>
        <div class="opening-hours-rangebar"></div>
        <?php echo $block->getInputHtml() ?>
    </div>
</div>

<script>
    require(["jquery", "elessar", "moment"],
        function($, RangeBar, moment) {
            var rangeBar = RangeBar({
                min: moment().startOf("day").format("LLLL"),
                max: moment().endOf("day").format("LLLL"),
                valueFormat: function(ts) {
                    return moment(ts).format("LT");
                },
                valueParse: function(date) {
                    return moment(date).valueOf();
                },
                values: [/** @TODO Inject values **/],
                snap: 1000 * 60 * 15,
                minSize: (1000 * 60 * 60) / 4,
                allowDelete: true,
                htmlLabel: true
            }).$el;

            var indicatorRangeBar = RangeBar({
                min: moment().startOf("day").format("LLLL"),
                max: moment().endOf("day").format("LLLL"),
                valueFormat: function(ts) {
                    return moment(ts).format("LT");
                },
                valueParse: function(date) {
                    return moment(date).valueOf();
                },
                values: [
                    [
                        moment().startOf("day").format("LLLL"),
                    ],
                    [
                        moment().startOf("day").add(6, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(3, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(9, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(12, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(15, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(18, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(21, "hours").format("LLLL")
                    ],
                    [
                        moment().startOf("day").add(24, "hours").format("LLLL")
                    ]
                ],
                snap: 1000 * 60 * 15,
                minSize: (1000 * 60 * 60) / 4,
                allowDelete: true,
                htmlLabel: true,
                label: function(a){return JSON.stringify(a[0])},
                readonly: true
            }).$el;

            $("#<?php echo $inputId ?> .opening-hours-rangebar").prepend(rangeBar).on("changing", function(ev, ranges) {
                $("#<?php echo $this->getHtmlId();?>").val(JSON.stringify(ranges,null,2));

                var rangeLabels = [];
                ranges.forEach(function (rangeItem) {
                    var subRangeLabels = [];
                    rangeItem.forEach(function (dateItem) {
                        subRangeLabels.push(dateItem);
                    });
                    rangeLabels.push(subRangeLabels.join(" - "));
                });
                var label = rangeLabels.join(", ");
                $("#<?php echo $this->getHtmlId();?>").closest(".field").children(".opening-hours-day").text(label);
            }).on("change", function(ev, ranges) {
                $("#<?php echo $this->getHtmlId();?>").val(JSON.stringify(ranges,null,2));

                var rangeLabels = [];
                ranges.forEach(function (rangeItem) {
                    var subRangeLabels = [];
                    rangeItem.forEach(function (dateItem) {
                        subRangeLabels.push(dateItem);
                    });
                    rangeLabels.push(subRangeLabels.join(" - "));
                });
                var label = rangeLabels.join(", ");

                $("#<?php echo $this->getHtmlId();?>").closest(".field").children(".opening-hours-day").text(label);
            });

            $("#<?php echo $inputId ?> .opening-hours-indicator").prepend(indicatorRangeBar);
        });
</script>
